@using Dictionary.WebApp.Pages.MainPages
@inherits LayoutComponentBase


<div class="navbar fixed-top text-white">


    <div class="logo">
        <a href="/" class="bg-white">
            <img height="30" alt="Logo" src="https://upload.wikimedia.org/wikipedia/commons/thumb/2/25/Ek%C5%9Fi_S%C3%B6zl%C3%BCk_yeni_logo.svg/2560px-Ek%C5%9Fi_S%C3%B6zl%C3%BCk_yeni_logo.svg.png" />
        </a>
    </div>


    <div class="search-box">
        <div class="input-group" style="flex-wrap:inherit;">
            <div class="form-outline">
                <input type="search" class="form-control small"
                       @bind-value="@searchText"
                       @bind-value:event="oninput"
                       @onkeypress="@SearchKeyDown"
                       @onfocusout="@OnSearchFocusOut"
                       placeholder="Sözlükte bir şey ara" />
            </div>

            <button type="button" style="margin-left:1px; border-radius:0.25rem;border:inherit;" class="btn btn-success btn-sozluk" @onclick="@Search" @onfocusout="@OnSearchFocusOut">
                <i class="fa fa-search h-75"></i>
            </button>

        </div>
        




        @if (showSearchResult)
        {
            <ul class="list-group">
                @foreach (var searchItem in searchResults)
                {
                    <li class="list-group-item">
                        <a @onclick="(async()=>await GoEntry(searchItem.Id))">
                            @searchItem.Subject
                        </a>
                    </li>
                }
            </ul>
        }
    </div>


    <AuthorizeView>
        <Authorized>
        <div class="top-nav">
        <input type="button" class="form-control btn-sucess btn-sozluk w-auto" value="bir şeyler yaz" @onclick="@NavigateCreateEntryPage" />
        <input type="button" class="form-control btn-sucess btn-sozluk w-auto" value="ben" @onclick="@NavigateMePage" />
        <input type="button" class="form-control btn-sucess btn-sozluk w-auto" value="çıkış yap" @onclick="@NavigateLogoutPage" />
        </div>
        </Authorized>

        <NotAuthorized>
            <div class="top-nav">
                <input type="button" class="form-control btn-success btn-sozluk w-auto" value="giriş yap" @onclick="@NavigateLoginPage" />
            </div>
        </NotAuthorized>

    </AuthorizeView>

    <div class="sub-nav">
        <a class="sub-nav-item active">bugün</a>
        <a class="sub-nav-item">gündem</a>
        <a class="sub-nav-item">debe</a>
        <a class="sub-nav-item">sorunsallar</a>
        <a class="sub-nav-item">takip</a>
        <a class="sub-nav-item">son</a>
        <a class="sub-nav-item">kenar</a>
        <a class="sub-nav-item">çaylaklar</a>
    </div>

</div>





<div class="page">
    <div class="sidebar" style="position:sticky;">
        <h5 class="text-white text-center sidebar-heading">@EntriesSubject</h5>

        <a class="more-data" @onclick="@RefreshEntries">yenile</a>

        <ul class="list-group">
            <EntriesComponent @ref=@entriesComponent />
        </ul>
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {
    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Inject]
    IEntryService EntryService { get; set; }

    public string EntriesSubject { get; set; } = "bugün";

    private EntriesComponent entriesComponent;

    private string searchText;

    private bool showSearchResult;

    private List<SearchEntryViewModel> searchResults;

    private async Task RefreshEntries()
    {
        await entriesComponent.RefreshList();
    }

    private void NavigateMePage() => NavigationManager.NavigateTo("/ben");

    private void NavigateLoginPage() => NavigationManager.NavigateTo("/giris");

    private void NavigateLogoutPage() => NavigationManager.NavigateTo("/cikis");

    private void NavigateCreateEntryPage() => NavigationManager.NavigateTo("/yeni-entry");

    private async Task SearchKeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await Search();
        }
    }

    private async Task OnSearchFocusOut()
    {
        await Task.Delay(100);
        if (showSearchResult) showSearchResult = false;
    }

    private async Task Search()
    {
        if (string.IsNullOrEmpty(searchText)) return;

        searchResults = await EntryService.SearchEntryBySubject(searchText);

        showSearchResult = true;

        searchText = string.Empty;
    }

    private async Task GoEntry(Guid entryId)
    {
        await OnSearchFocusOut();

        NavigationManager.NavigateTo($"/entry/{entryId}");

    }





}